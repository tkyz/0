#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

(

  # gpg
# gpg --with-colons --list-secret-keys | grep -A 1 ^sec: | grep ^fpr: | cut -d ':' -f 10 | while read fpr; do
  gpg --with-colons --list-keys        | grep -A 1 ^pub: | grep ^fpr: | cut -d ':' -f 10 | while read fpr; do

    exp_dir="${HOME}/mnt/${fpr}"
    mkdir -p "${exp_dir}"

#   gpg --batch --yes --export-secret-keys --armor --output "${exp_dir}/key" "0x${fpr}" 2> '/dev/null' || true
    gpg --batch --yes --export             --armor --output "${exp_dir}/pub" "0x${fpr}"

  done

  # jpki
  if type myna &> '/dev/null'; then

    # TODO: Error: scard: Sharing violation.
    is_sudoer
    sudo systemctl restart pcscd

    test="$(myna test)"
#   echo "${test}"

    if ! echo "${test}" | grep 'STATE_EMPTY' &> '/dev/null' && echo "${test}" | grep 'STATE_PRESENT' &> '/dev/null'; then

      echo "${test}" | grep 'STATE_INUSE' &> '/dev/null' && false

#     pin4=
#     pin16=

      # TODO: pkへのアクセスにpinを必要とする制度設計。何故か https://laws.e-gov.go.jp/law/425AC0000000027
#     mynumber="$(myna text mynumber --pin "${pin4}")"
      mynumber='000000000000'

      exp_dir="${HOME}/mnt/$(echo "${mynumber}" | awk '{print substr($0,1,4) "-" substr($0,5,4) "-" substr($0,9,4)}')"
      mkdir -p "${exp_dir}"

      # attr
#     myna text cert                      # cert
#     myna text info                      # apinfo keyid version extapdu vendor option
#     myna text attr      --pin "${pin4}" # ヘッダ、氏名、住所、生年月日、性別
#     myna text signature --pin "${pin4}" # mynum-hash attr-hash signature

      # photo
#     myna visual photo --output '/dev/stdout' --pin "${pin4}" | convert '/dev/stdin' "${exp_dir}/photo.png"

      # CA証明書
      myna jpki cert authca --form der > "${exp_dir}/jp.go.jpki_auth_ca.der" # https://www.jpki.go.jp/ca/ca_rules4.html
      myna jpki cert signca --form der > "${exp_dir}/jp.go.jpki_sign_ca.der" # https://www.jpki.go.jp/ca/ca_rules3.html

#     myna jpki cert auth   --form der                  | openssl verify -CAfile "${exp_dir}/jp.go.jpki_auth_ca.der" '/dev/stdin' || true
#     myna jpki cert sign   --form der --pin "${pin16}" | openssl verify -CAfile "${exp_dir}/jp.go.jpki_sign_ca.der" '/dev/stdin' || true

      # ssh
#     myna jpki cert auth   --form ssh                                                                                    > "${exp_dir}/pub" # TODO: 違う公開鍵が出力される
      myna jpki cert auth   --form der | openssl x509 -inform der -noout -pubkey | ssh-keygen -f '/dev/stdin' -i -m pkcs8 > "${exp_dir}/pub"

      # sign
#     sign_file=
#     myna jpki cert sign   --form der                                                                     --pin "${pin16}" | openssl x509 -inform der -noout -text
#     myna jpki cms  sign   --form der --detached --md sha512 --in      "${sign_file}" --out '/dev/stdout' --pin "${pin16}" > "${sign_file}.der"
#     myna jpki cms  verify --form der --detached             --content "${sign_file}"                                        "${sign_file}.der"

#     myna pin change card ...
#     myna pin change auth ...
#     myna pin change sign ...
#     myna pin status

    fi

  fi

  # authorized_keys
  keys_file="${HOME}/.ssh/authorized_keys"
  touch "${keys_file}"
  {
    cat "${keys_file}"
    cat "${HOME}/mnt/0000-0000-0000/pub"
#   curl 'https://github.com/tkyz.keys'
  } | awk '{print $1 " " $2}' | sort --unique --output "${keys_file}"

  # pip
  pip freeze | sed -e 's/[!=<> #].*//g' | sort --unique --output "${HOME}/doc/requirements-py.txt"

)
