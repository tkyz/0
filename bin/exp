#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

(

  # gpg
# gpg --with-colons --list-secret-keys | grep -A 1 ^sec: | grep ^fpr: | cut -d ':' -f 10 | while read fpr; do
  gpg --with-colons --list-keys        | grep -A 1 ^pub: | grep ^fpr: | cut -d ':' -f 10 | while read fpr; do

    exp_dir="${HOME}/mnt/${fpr}"
    mkdir -p "${exp_dir}"

#   gpg --batch --yes --export-secret-keys --armor --output "${exp_dir}/key" "0x${fpr}" 2> '/dev/null' || true
    gpg --batch --yes --export             --armor --output "${exp_dir}/pub" "0x${fpr}"

  done

  # jpki
  if type myna &> '/dev/null'; then

    # TODO: Error: scard: Sharing violation.
    is_sudoer
    sudo systemctl restart pcscd

      myna test | grep 'STATE_PRESENT' &> '/dev/null'
    ! myna test | grep 'STATE_INUSE'   &> '/dev/null'

#   pin4=
#   pin16=

    # TODO: pkへのアクセスにpinを必要とする制度設計。何故か https://laws.e-gov.go.jp/law/425AC0000000027
#   mynumber="$(myna text mynumber --pin "${pin4}")"
    mynumber='000000000000'

    exp_dir="${HOME}/mnt/$(echo "${mynumber}" | awk '{print substr($0,1,4) "-" substr($0,5,4) "-" substr($0,9,4)}')"
    mkdir -p "${exp_dir}"

    # attr
#   myna text cert                      # cert
#   myna text info                      # apinfo keyid version extapdu vendor option
#   myna text attr      --pin "${pin4}" # ヘッダ、氏名、住所、生年月日、性別
#   myna text signature --pin "${pin4}" # mynum-hash attr-hash signature

    # photo
#   myna visual photo --output '/dev/stdout' --pin "${pin4}" | convert '/dev/stdin' "${exp_dir}/.face.png"

    # ca
    myna jpki cert authca --form der | tee "${exp_dir}/jpki-auth-ca.der" | openssl x509 -inform der -out "${exp_dir}/jpki-auth-ca.pem" # https://www.jpki.go.jp/ca/pdf/auth_fingerprint.pdf
    myna jpki cert signca --form der | tee "${exp_dir}/jpki-sign-ca.der" | openssl x509 -inform der -out "${exp_dir}/jpki-sign-ca.pem" # https://www.jpki.go.jp/ca/pdf/sign_fingerprint.pdf

    # ssh
#   myna jpki cert auth   --form ssh                                                                   | awk '{print $1 " " $2}' > "${exp_dir}/pub"
    ssh-keygen -D '/usr/lib/x86_64-linux-gnu/opensc-pkcs11.so' | grep 'User Authentication Public Key' | awk '{print $1 " " $2}' > "${exp_dir}/pub"

    # sign
#   myna jpki cms sign   --form der --md sha512 --in "${in_file}" --out "${out_file}" --pin "${pin16}"
#   myna jpki cms verify --form der                                     "${out_file}"

#   myna pin change card ...
#   myna pin change auth ...
#   myna pin change sign ...
#   myna pin status

  fi

  # authorized_keys
  keys_file="${HOME}/.ssh/authorized_keys"
  touch "${keys_file}"
  {
    cat "${keys_file}"
    cat "${HOME}/mnt/0000-0000-0000/pub"
#   curl 'https://github.com/tkyz.keys'
  } | awk '{print $1 " " $2}' | sort --unique --output "${keys_file}"

  # pip
  pip freeze | sed -e 's/[!=<> #].*//g' | sort --unique --output "${HOME}/doc/requirements-py.txt"

)
